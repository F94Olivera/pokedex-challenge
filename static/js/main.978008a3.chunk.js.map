{"version":3,"sources":["contexts/ThemeContext.js","components/Navbar/Navbar.js","components/Modal/Modal.js","components/Cards/Cards.js","components/Pagination/Pagination.js","components/Footer/Footer.js","App.js","index.js"],"names":["ThemeContext","createContext","ThemeContextProvider","state","isLightTheme","light","syntax","ui","bg","dark","toggleTheme","setState","document","body","style","backgroundColor","Provider","value","this","props","children","Component","Navbar","useContext","theme","className","background","color","href","onClick","type","id","htmlFor","Modal","modalCard","POKE_API_SPECIE","POKE_API_SPRITE","useState","pokemon","setPokemon","isEn","setIsEn","loading","setLoading","useEffect","a","axios","get","name","res","data","fetchCard","tabIndex","role","aria-labelledby","aria-hidden","aria-label","data-dismiss","src","alt","hasOwnProperty","flavor_text_entries","find","item","language","flavor_text","parse","Cards","cards","indexOfFirstCard","modalDetails","map","card","i","key","width","data-toggle","data-target","Pagination","cardsPerPage","totalCards","paginate","pageNumbers","Math","ceil","push","number","Footer","App","setCards","currentPage","setCurrentPage","setModalCard","results","fetchPosts","indexOfLastCard","currentCards","slice","length","pageNumber","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.978008a3.chunk.js","sourcesContent":["import React, { createContext, Component } from 'react';\n\nexport const ThemeContext = createContext();\n\nclass ThemeContextProvider extends Component {\n  state = {\n    isLightTheme: true,\n    light: {\n      syntax: '#000',\n      ui: '#eee',\n      bg: '#fff',\n    },\n    dark: {\n      syntax: '#eee',\n      ui: '#333',\n      bg: '#000',\n    },\n  };\n  toggleTheme = () => {\n    this.setState({ isLightTheme: !this.state.isLightTheme });\n    document.body.style.backgroundColor = this.state.isLightTheme\n      ? 'black'\n      : 'white';\n  };\n  render() {\n    return (\n      <ThemeContext.Provider\n        value={{ ...this.state, toggleTheme: this.toggleTheme }}\n      >\n        {this.props.children}\n      </ThemeContext.Provider>\n    );\n  }\n}\n\nexport default ThemeContextProvider;\n","import React, { useContext } from 'react';\nimport './Navbar.css';\nimport { ThemeContext } from '../../contexts/ThemeContext';\n\nfunction Navbar() {\n  const { toggleTheme, isLightTheme, dark, light } = useContext(ThemeContext);\n  const theme = isLightTheme ? light : dark;\n  return (\n    <div\n      className=\"container-fluid\"\n      style={{ background: theme.bg, color: theme.syntax }}\n    >\n      <nav\n        className=\"navbar navbar-expand-lg justify-content-between\"\n        style={{ background: theme.ui }}\n      >\n        <h5 className=\"navbar-brand\" style={{ color: theme.syntax }} href=\"#\">\n          Pokedex\n        </h5>\n        <div\n          className=\"custom-control custom-switch\"\n          style={{ color: theme.syntax }}\n        >\n          <input\n            onClick={toggleTheme}\n            type=\"checkbox\"\n            className=\"custom-control-input\"\n            id=\"darkSwitch\"\n          />\n          <label className=\"custom-control-label\" htmlFor=\"darkSwitch\">\n            Dark Mode\n          </label>\n        </div>\n      </nav>\n    </div>\n  );\n}\n\nexport default Navbar;\n","import React, { useState, useEffect, useContext } from 'react';\nimport './Modal.css';\nimport axios from 'axios';\nimport { ThemeContext } from '../../contexts/ThemeContext';\n\nfunction Modal({ modalCard, POKE_API_SPECIE, POKE_API_SPRITE }) {\n  const [pokemon, setPokemon] = useState(modalCard);\n  const [isEn, setIsEn] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const { isLightTheme, dark, light } = useContext(ThemeContext);\n  const theme = isLightTheme ? light : dark;\n\n  useEffect(() => {\n    const fetchCard = async () => {\n      setLoading(true);\n      const res = await axios.get(\n        `${POKE_API_SPECIE}${modalCard.name ? modalCard.name : 1}`\n      );\n\n      setLoading(false);\n      setPokemon(res.data);\n    };\n\n    fetchCard();\n  }, [modalCard]);\n\n  const parse = (type) => {\n    let data;\n    if (\n      type === 'flavor_text' &&\n      pokemon.hasOwnProperty('flavor_text_entries')\n    ) {\n      if (isEn) {\n        data = pokemon.flavor_text_entries.find(\n          (item) => item.language.name === 'en'\n        );\n      } else {\n        data = pokemon.flavor_text_entries.find(\n          (item) => item.language.name === 'es'\n        );\n      }\n      return data.flavor_text;\n    }\n  };\n\n  if (loading)\n    return (\n      <div\n        className=\"modal fade\"\n        id=\"exampleModal\"\n        tabIndex=\"-1\"\n        role=\"dialog\"\n        aria-labelledby=\"exampleModalLabel\"\n        aria-hidden=\"true\"\n      >\n        <div className=\"modal-dialog\" role=\"document\">\n          <div\n            style={{ color: theme.syntax, background: theme.ui }}\n            className=\"modal-content\"\n          >\n            <h1>Loading...</h1>\n          </div>\n        </div>\n      </div>\n    );\n\n  return (\n    // <!-- Modal -->\n    <div\n      className=\"modal fade\"\n      id=\"exampleModal\"\n      tabIndex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"exampleModalLabel\"\n      aria-hidden=\"true\"\n    >\n      <div className=\"modal-dialog\" role=\"document\">\n        <div\n          style={{ color: theme.syntax, background: theme.ui }}\n          className=\"modal-content\"\n        >\n          <div className=\"modal-header justify-content-between\">\n            <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n              <button\n                onClick={() => setIsEn(true)}\n                type=\"button\"\n                className={`btn btn-secondary ${isEn ? 'active' : ''}`}\n              >\n                EN\n              </button>\n              <button\n                onClick={() => setIsEn(false)}\n                type=\"button\"\n                className={`btn btn-secondary ${!isEn ? 'active' : ''}`}\n              >\n                ES\n              </button>\n            </div>\n            <button\n              type=\"button\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            <div style={{ background: theme.bg }} className=\"card\">\n              <img\n                src={`${POKE_API_SPRITE}${pokemon.id}.png`}\n                className=\"modal-img card-img-top\"\n                alt=\"...\"\n              />\n            </div>\n            <h5 className=\"modal-name text-center mt-2\">{modalCard.name}</h5>\n            <p className=\"text-center\">{parse('flavor_text')}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Modal;\n","import React, { useContext } from 'react';\nimport './Cards.css';\nimport { ThemeContext } from '../../contexts/ThemeContext';\n\nfunction Cards({\n  cards,\n  loading,\n  indexOfFirstCard,\n  modalDetails,\n  POKE_API_SPRITE,\n}) {\n  const { isLightTheme, dark, light } = useContext(ThemeContext);\n  const theme = isLightTheme ? light : dark;\n  if (loading)\n    return (\n      <div className=\"container-fluid mt-5\">\n        <div className=\"row justify-content-around\">\n          <h1>Loading...</h1>\n        </div>\n      </div>\n    );\n\n  return (\n    // <!-- Cards -->\n    <div className=\"container-fluid mt-5\">\n      <div className=\"row justify-content-around\">\n        {cards.map((card, i) => (\n          <div\n            key={i}\n            onClick={() => modalDetails(i)}\n            className=\"card\"\n            style={{\n              width: '18rem',\n              background: theme.ui,\n              color: theme.syntax,\n            }}\n            data-toggle=\"modal\"\n            data-target=\"#exampleModal\"\n          >\n            <img\n              src={`${POKE_API_SPRITE}${i + indexOfFirstCard + 1}.png`}\n              className=\"card-img-top\"\n              alt=\"...\"\n            />\n            <div className=\"card-body\">\n              <h5 className=\"card-title text-center\">{card.name}</h5>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Cards;\n","import React, { useContext } from 'react';\nimport './Pagination.css';\nimport { ThemeContext } from '../../contexts/ThemeContext';\n\nfunction Pagination({ cardsPerPage, totalCards, paginate, loading }) {\n  const { isLightTheme, dark, light } = useContext(ThemeContext);\n  const theme = isLightTheme ? light : dark;\n\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalCards / cardsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  if (loading) {\n    return <div></div>;\n  }\n\n  return (\n    <div\n      style={{ background: theme.bg, color: theme.syntax }}\n      className=\"container-fluid mt-4\"\n    >\n      <div className=\"row-sm\">\n        <div className=\"d-flex justify-content-center\">\n          <nav className=\"test\" aria-label=\"Page navigation example\">\n            <ul className=\"pagination\">\n              {pageNumbers.map((number) => (\n                <li key={number} className=\"page-item\">\n                  <a\n                    onClick={() => paginate(number)}\n                    style={{ backgroundColor: theme.ui }}\n                    className=\"page-link\"\n                    href=\"#\"\n                    aria-label=\"Previous\"\n                  >\n                    <span aria-hidden=\"true\">{number}</span>\n                  </a>\n                </li>\n              ))}\n            </ul>\n          </nav>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Pagination;\n","import React, { useContext } from 'react';\nimport './Footer.css';\nimport { ThemeContext } from '../../contexts/ThemeContext';\n\nfunction Footer() {\n  const { isLightTheme, dark, light } = useContext(ThemeContext);\n  const theme = isLightTheme ? light : dark;\n  return (\n    <div\n      className=\"d-flex justify-content-center\"\n      style={{ color: theme.syntax, background: theme.bg }}\n    >\n      <p style={{ background: theme.ui }}>\n        {'<> '}\n        with{' '}\n        <span className=\"icon\" style={{ color: theme.syntax }}>\n          &#9829;\n        </span>{' '}\n        by F94\n      </p>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nimport ThemeContextProvider from './contexts/ThemeContext';\nimport Navbar from './components/Navbar/Navbar';\nimport Modal from './components/Modal/Modal';\nimport Cards from './components/Cards/Cards';\nimport Pagination from './components/Pagination/Pagination';\nimport Footer from './components/Footer/Footer';\n\n//KEYS\nconst POKE_API = 'https://pokeapi.co/api/v2/pokemon';\nconst POKE_API_SPECIE = 'https://pokeapi.co/api/v2/pokemon-species/';\nconst POKE_API_SPRITE =\n  'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/';\n\nfunction App() {\n  const [cards, setCards] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [cardsPerPage] = useState(5);\n  const [modalCard, setModalCard] = useState({});\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n      const res = await axios.get(POKE_API);\n      setCards(res.data.results);\n      setModalCard(res.data.results[0]);\n      setLoading(false);\n    };\n\n    fetchPosts();\n  }, []);\n\n  //Get current posts\n  const indexOfLastCard = currentPage * cardsPerPage;\n  const indexOfFirstCard = indexOfLastCard - cardsPerPage;\n  const currentCards = cards.slice(indexOfFirstCard, indexOfLastCard);\n\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  const modalDetails = (i) => {\n    setModalCard(cards[(currentPage - 1) * cardsPerPage + i]);\n  };\n\n  return (\n    <div className=\"App\">\n      <ThemeContextProvider>\n        <Navbar />\n        <Modal\n          modalCard={modalCard}\n          POKE_API_SPECIE={POKE_API_SPECIE}\n          POKE_API_SPRITE={POKE_API_SPRITE}\n        />\n        <Cards\n          cards={currentCards}\n          loading={loading}\n          indexOfFirstCard={indexOfFirstCard}\n          modalDetails={modalDetails}\n          POKE_API_SPRITE={POKE_API_SPRITE}\n        />\n        <Pagination\n          loading={loading}\n          cardsPerPage={cardsPerPage}\n          totalCards={cards.length}\n          paginate={paginate}\n        />\n        <Footer />\n      </ThemeContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}